package metanit.basics;

import java.util.Scanner;

/**
 * Нередко в процессе выполнения программы могут возникать ошибки, при том необязательно
 * по вине разработчика. Некоторые из них трудно предусмотреть или предвидеть, а иногда
 * и вовсе невозможно. Так, например, может неожиданно оборваться сетевое подключение при
 * передаче файла. Подобные ситуации называются исключениями.
 * <p>
 * В языке Java предусмотрены специальные средства для обработки подобных ситуаций. Одним
 * из таких средств является конструкция try...catch...finally. При возникновении исключения
 * в блоке try управление переходит в блок catch, который может обработать данное исключение.
 * Если такого блока не найдено, то пользователю отображается сообщение о необработанном
 * исключении, а дальнейшее выполнение программы останавливается. И чтобы подобной остановки
 * не произошло, и надо использовать блок try..catch.
 */
public class L24_IntroductionToExceptionHandling {
    public static void main(String[] args) {
        int[] num = new int[3];
        try{
            num[3] = 3;
        }
        //Можно использовать несколько блоков catch.
        catch(NumberFormatException ex) {
            System.out.print("NumberFormatException\n");
        }
        catch(Exception ex) {
            System.out.println("Error");
        }
        /*
        Конструкция try..catch также может иметь блок finally. Однако этот блок необязательный,
        и его можно при обработке исключений опускать. Блок finally выполняется в любом случае,
        возникло ли исключение в блоке try или нет.
         */
        finally {
            System.out.print("Это не обязательный блок\n");
        }

        //Оператор throw.
        /*
        Чтобы сообщить о выполнении исключительных ситуаций в программе, можно использовать
        оператор throw. То есть с помощью этого оператора мы сами можем создать исключение
        и вызвать его в процессе выполнения.
         */
        Scanner in = new Scanner(System.in);
        System.out.print("Введите свой возраст: ");
        int age;
        try {
            age = in.nextInt();
            if (age > 130) throw new Exception("Пиздишь!");
            else System.out.printf("Ваш возраст %d лет.\n", age);
        }
        catch (Exception ex) {
            System.out.println(ex.getMessage() + " Пиши правду.");
            age = in.nextInt();
            System.out.printf("Ваш возраст %d лет.\n", age);
        }
        in.close();
    }
}
