package metanit.oop;

/**
 * Все члены класса в языке Java - поля и методы - имеют модификаторы доступа. Модификаторы
 * доступа позволяют задать допустимую область видимости для членов класса, то есть контекст,
 * в котором можно употреблять данную переменную или метод.
 * <p>
 * В Java используются следующие модификаторы доступа:
 * <p>
 * public: публичный, общедоступный класс или член класса. Поля и методы, объявленные
 * с модификатором public, видны другим классам из текущего пакета и из внешних пакетов
 * <p>
 * private: закрытый класс или член класса, противоположность модификатору public. Закрытый
 * класс или член класса доступен только из кода в том же классе
 * <p>
 * protected: такой класс или член класса доступен из любого места в текущем классе или пакете
 * или в производных классах, даже если они находятся в других пакетах
 * <p>
 * Модификатор по умолчанию. Отсутствие модификатора у поля или метода класса предполагает
 * применение к нему модификатора по умолчанию. Такие поля или методы видны всем классам в текущем пакете.
 */
public class L27_Modifiers {
    public static void main(String[] args) {
        ImportPackages imp = new ImportPackages(77);
        imp.printNumber();//Этот метод был помечен как protected. Его даже не обязательно импортировать.

        Class1 cl = new Class1();
        System.out.println(cl.getNumber());
        cl.setNumber(99);
        System.out.println(cl.getNumber());
        cl = new Class1(25);
        System.out.println(cl.getNumber());
    }
}

class Class1 {
    private int number;

    Class1(){}

    Class1(int num) {
        number = num;
    }

    public void setNumber(int n) {
        number = n;
    }

    public int getNumber() {
        return number;
    }
}